[{"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\index.js":"1","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\App.js":"2","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\redux\\store\\index.js":"3","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\NavBar\\NavBar.jsx":"4","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Landing\\Landing.jsx":"5","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Home\\Home.jsx":"6","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Create\\CreateBreed.jsx":"7","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Breeds\\BreedDetail.jsx":"8","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Status\\NotFound.jsx":"9","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\redux\\actions\\index.js":"10","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\redux\\reducers\\index.js":"11","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Create\\formValidators.js":"12","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Status\\Loading.jsx":"13","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Breeds\\Breeds.jsx":"14","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Status\\Error.jsx":"15","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Status\\Alert.jsx":"16","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Pagination\\Pagination.jsx":"17","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Filters\\Filters.jsx":"18","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Filters\\SearchBar\\SearchByName.jsx":"19","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Breeds\\BreedCard.jsx":"20","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Filters\\Sorts.jsx":"21","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Filters\\Categories\\BreedName.jsx":"22","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Filters\\Categories\\Temperament.jsx":"23"},{"size":383,"mtime":1667342681048,"results":"24","hashOfConfig":"25"},{"size":1266,"mtime":1668992723870,"results":"26","hashOfConfig":"25"},{"size":380,"mtime":1667701045778,"results":"27","hashOfConfig":"25"},{"size":661,"mtime":1668997239921,"results":"28","hashOfConfig":"25"},{"size":1087,"mtime":1668887293106,"results":"29","hashOfConfig":"25"},{"size":1949,"mtime":1669156149490,"results":"30","hashOfConfig":"25"},{"size":9276,"mtime":1669155630513,"results":"31","hashOfConfig":"25"},{"size":4345,"mtime":1669155661415,"results":"32","hashOfConfig":"25"},{"size":266,"mtime":1668727514958,"results":"33","hashOfConfig":"25"},{"size":5522,"mtime":1669089359499,"results":"34","hashOfConfig":"25"},{"size":2004,"mtime":1669089727916,"results":"35","hashOfConfig":"25"},{"size":1550,"mtime":1669005168736,"results":"36","hashOfConfig":"25"},{"size":468,"mtime":1669000235311,"results":"37","hashOfConfig":"25"},{"size":806,"mtime":1669154925865,"results":"38","hashOfConfig":"25"},{"size":587,"mtime":1669154930835,"results":"39","hashOfConfig":"25"},{"size":1464,"mtime":1669076038677,"results":"40","hashOfConfig":"25"},{"size":1220,"mtime":1668997084208,"results":"41","hashOfConfig":"25"},{"size":3353,"mtime":1669084556704,"results":"42","hashOfConfig":"25"},{"size":1574,"mtime":1669076602342,"results":"43","hashOfConfig":"25"},{"size":1603,"mtime":1668995868021,"results":"44","hashOfConfig":"25"},{"size":1540,"mtime":1668878242718,"results":"45","hashOfConfig":"25"},{"size":1183,"mtime":1669051377112,"results":"46","hashOfConfig":"25"},{"size":1260,"mtime":1668995937323,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"pm9x4h",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\index.js",[],["98","99"],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\App.js",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\redux\\store\\index.js",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\NavBar\\NavBar.jsx",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Landing\\Landing.jsx",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Home\\Home.jsx",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Create\\CreateBreed.jsx",["100"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { createBreed, setCreateResponse, getBreeds, setDisplayBreeds } from '../../redux/actions';\r\nimport Alert from '../Status/Alert';\r\nimport Loading from '../Status/Loading';\r\nimport validators from './formValidators';\r\nimport styles from './CreateBreed.module.css';\r\n\r\nconst CreateBreed = () => {\r\n\r\n  const temperaments = useSelector(state => state.temperaments);\r\n  const response = useSelector(state => state.createResponse);\r\n  const isLoading = useSelector(state => state.isLoading);\r\n  const breeds = useSelector(state => state.breeds);\r\n  const dispatch = useDispatch();\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isCreating, setIsCreating] = useState('');\r\n  let history = useHistory();\r\n\r\n  const [input, setInput] = useState(\r\n    { name: '', min_height: '', max_height: '', min_weight: '', max_weight: '', min_life_span: '', max_life_span: '', temperaments: [] }\r\n  );\r\n\r\n  const [errors, setErrors] = useState(\r\n    {\r\n      name: '', min_height: '', max_height: '', min_weight: '', max_weight: '', min_life_span: '', max_life_span: '', temperaments: '',\r\n      heightMinMax: '', weightMinMax: '', lifeSpanMinMax: ''\r\n    }\r\n  );\r\n\r\n  const handleChange = (event) => {\r\n    event.preventDefault();\r\n    setInput(prev => ({ ...prev, [event.target.name]: event.target.value }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setIsCreating('Creating');\r\n    if(Object.values(errors).every(e => e === '') && input.temperaments.length) {\r\n      if(!input.min_life_span) delete input.min_life_span;\r\n      if(!input.max_life_span) delete input.max_life_span;\r\n      dispatch(createBreed(input));\r\n      dispatch(setDisplayBreeds(breeds));\r\n      document.querySelectorAll('input[type=checkbox]').forEach(el => el.checked = false);\r\n      setErrors({\r\n        name: '', min_height: '', max_height: '', min_weight: '', max_weight: '', min_life_span: '', max_life_span: '', temperaments: '',\r\n        heightMinMax: '', weightMinMax: '', lifeSpanMinMax: ''\r\n      });\r\n      setInput({ name: '', min_height: '', max_height: '', min_weight: '', max_weight: '', min_life_span: '', max_life_span: '', temperaments: [] });\r\n      //dispatch(getBreeds());\r\n    }\r\n  };\r\n\r\n  const validate = (event) => {\r\n    if(event.target.name === 'name')\r\n      return setErrors(prev => ({ ...prev, name: validators['name'](event.target.value, breeds) }));\r\n    if(event.target.value !== '') {\r\n      let name = event.target.name;\r\n      if(name.includes('_')) {\r\n        name = name.split('_')[1];\r\n      }\r\n      setErrors(prev => ({ ...prev, [event.target.name]: validators[name](event.target.value) }));\r\n      if(input.min_height && input.max_height) {\r\n        setErrors(prev => ({ ...prev, heightMinMax: validators.minMax(input.min_height, input.max_height, 'Height') }));\r\n      }\r\n      if(input.min_weight && input.max_weight) {\r\n        setErrors(prev => ({ ...prev, weightMinMax: validators.minMax(input.min_weight, input.max_weight, 'Weight') }));\r\n      }\r\n      if(input.min_life_span && input.max_life_span) {\r\n        setErrors(prev => ({ ...prev, lifeSpanMinMax: validators.minMax(input.min_life_span, input.max_life_span, 'Life Span') }));\r\n      }\r\n    }\r\n  }\r\n\r\n  const addTemperament = (temp) => {\r\n    const { id } = temp;\r\n    if(!input.temperaments.find(temp => temp === id)) {\r\n      setInput(prev => ({ ...prev, temperaments: [...prev.temperaments, temp] }));\r\n      setErrors(prev => ({ ...prev, temperaments: '' }));\r\n    }\r\n    else {\r\n      setInput(prev => ({ ...prev, temperaments: prev.temperaments.filter(temp => temp !== id) }));\r\n      if(!input.temperaments.length) {\r\n        setErrors(prev => ({ ...prev, temperaments: 'Please provide at least one Temperament' }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkButtonState = () => {\r\n    for(let i in input) {\r\n      if(i !== 'min_life_span' && i !== 'max_life_span' && !input[i].length) return true;\r\n    }\r\n    for(let e in errors) {\r\n      if(errors[e].length) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  const closeAlert = (event) => {\r\n    event.preventDefault();\r\n\r\n    setIsOpen(false);\r\n    dispatch(setCreateResponse(''));\r\n    setIsCreating('');\r\n    history.push('/breeds');\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDisabled(checkButtonState());\r\n    //eslint-disable-next-line\r\n  }, [input]);\r\n\r\n  useEffect(() => {\r\n    setIsOpen(true);\r\n\r\n    //eslint-disable-next-line\r\n  }, [response]);\r\n\r\n  useEffect(() => {\r\n    setIsOpen(false);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n\r\n      {Object.keys(response).length !== 0 &&\r\n        <Alert isOpen={isOpen} onClose={closeAlert} response={response} />\r\n      }\r\n\r\n      {isLoading ? <Loading message={isCreating} /> :\r\n\r\n        <form onSubmit={handleSubmit} className={styles.form} >\r\n          <div className={styles.title}>Create Breed</div>\r\n\r\n          <div className={styles.leftContainer}>\r\n            <div className={styles.label}>Name <span className={styles.cross}>*</span> </div>\r\n            <input key='name' type='text' name='name' value={input.name} placeholder='Name'\r\n              onChange={(event) => { handleChange(event) }} onBlur={validate} className={styles.nameInput} />\r\n            {errors?.name ? <div className={styles.error}>{errors?.name}</div> : null}\r\n\r\n            <div className={styles.sharedInput}>\r\n              <div className={styles.label}>Height <span className={styles.cross}>*</span> </div>\r\n              <input key='min_height' type='text' name='min_height' value={input.min_height} placeholder='Min'\r\n                onChange={(event) => { handleChange(event) }} onBlur={validate} className={styles.inputSmall} />\r\n              <input key='max_height' type='text' name='max_height' value={input.max_height} placeholder='Max'\r\n                onChange={(event) => { handleChange(event) }} onBlur={validate} className={`${styles.inputSmall} ${styles.inputRight}`} />\r\n              {errors?.min_height || errors?.max_height ? <div className={styles.error}>{errors?.min_height || errors?.max_height}</div> :\r\n                errors?.heightMinMax ? <div className={styles.error}>{errors?.heightMinMax}</div> :\r\n                  null}\r\n            </div>\r\n\r\n            <div className={styles.sharedInput}>\r\n              <div className={styles.label}>Weight <span className={styles.cross}>*</span> </div>\r\n              <input key='min_weight' type='text' name='min_weight' value={input.min_weight} placeholder='Min'\r\n                onChange={(event) => { handleChange(event) }} onBlur={validate} className={styles.inputSmall} />\r\n              <input key='max_weight' type='text' name='max_weight' value={input.max_weight} placeholder='Max'\r\n                onChange={(event) => { handleChange(event) }} onBlur={validate} className={`${styles.inputSmall} ${styles.inputRight}`} />\r\n              {errors?.min_weight || errors?.max_weight ? <div className={styles.error}>{errors?.min_weight || errors?.max_weight}</div> :\r\n                errors?.weightMinMax ? <div className={styles.error}>{errors?.weightMinMax}</div> :\r\n                  null}\r\n            </div>\r\n\r\n            <div className={styles.sharedInput}>\r\n              <div className={styles.label}>Life Span </div>\r\n              <input key='min_life_span' type='text' name='min_life_span' value={input.min_life_span} placeholder='Min'\r\n                onChange={(event) => { handleChange(event) }} onBlur={validate} className={styles.inputSmall} />\r\n              <input key='max_life_span' type='text' name='max_life_span' value={input.max_life_span} placeholder='Max'\r\n                onChange={(event) => { handleChange(event) }} onBlur={validate} className={`${styles.inputSmall} ${styles.inputRight}`} />\r\n              {errors?.min_life_span || errors?.max_life_span ? <div className={styles.error}>{errors?.min_life_span || errors?.max_life_span}</div> :\r\n                errors?.lifeSpanMinMax ? <div className={styles.error}>{errors?.lifeSpanMinMax}</div> :\r\n                  null}\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className={styles.rightContainer}>\r\n            <div className={styles.label}>Temperaments <span className={styles.cross}>*</span> </div>\r\n            <div className={styles.temperaments}>\r\n              {temperaments?.map(temp => {\r\n                return (\r\n                  <div key={temp.id}>\r\n                    <label >\r\n                      <div>\r\n                        <input type='checkbox' onChange={() => { addTemperament(temp) }}></input>\r\n                        <span>{temp.name}</span>\r\n                      </div>\r\n                    </label>\r\n                  </div>\r\n                )\r\n              })\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className={styles.backButton}>\r\n            <NavLink to={'/breeds/'}><button >Back</button></NavLink>\r\n          </div>\r\n          <div className={styles.createButton}>\r\n            <button disabled={disabled}>Create</button>\r\n          </div>\r\n        </form>\r\n      }\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateBreed;","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Breeds\\BreedDetail.jsx",["101","102"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink, useParams, useHistory } from 'react-router-dom';\r\nimport { deleteBreed, getBreedDetail, getBreeds, setDeleteResponse, setDisplayBreeds } from '../../redux/actions';\r\nimport styles from './BreedDetail.module.css';\r\nimport noPicture from '../../img/newDog.png';\r\nimport Loading from '../Status/Loading';\r\nimport Error from '../Status/Error';\r\nimport Alert from '../Status/Alert';\r\n\r\n\r\nconst BreedDetail = () => {\r\n\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const breed = useSelector(state => state.breed);\r\n  const breeds = useSelector(state => state.breeds);\r\n  const isLoading = useSelector(state => state.isLoading);\r\n  const detailResponse = useSelector(state => state.getDetailResponse);\r\n  const deleteResponse = useSelector(state => state.deleteResponse);\r\n  const [isDeleting, setIsDeleting] = useState('');\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  let history = useHistory();\r\n\r\n  const { name, image, min_weight, max_weight, min_height, max_height, min_life_span, max_life_span, temperaments } = breed;\r\n\r\n  const isFromDB = isNaN(params.id);\r\n\r\n  const sortedTemps = temperaments?.sort((a, b) => {\r\n    if(a === null) return 1;\r\n    else if(b === null) return -1;\r\n    else if(a === b) return 0;\r\n    return (a > b ? 1 : -1);\r\n  });\r\n\r\n  const handleDelete = () => {\r\n    setIsDeleting('Deleting');\r\n    dispatch(deleteBreed(params.id));\r\n    dispatch(setDisplayBreeds(breeds));\r\n  };\r\n\r\n  const closeAlert = (event) => {\r\n    event.preventDefault();\r\n    setIsOpen(false);\r\n    dispatch(setDeleteResponse(''));\r\n    setIsDeleting('');\r\n    history.push('/breeds');\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsOpen(true);\r\n    //eslint-disable-next-line\r\n  }, [deleteResponse]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getBreedDetail(params.id));\r\n    setIsOpen(false);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(deleteResponse).length !== 0 &&\r\n        <Alert isOpen={isOpen} onClose={closeAlert} response={deleteResponse} className={styles.alert} />\r\n      }\r\n\r\n      {isLoading ? <Loading message={isDeleting} /> :\r\n        Object.keys(detailResponse).length !== 0 ?\r\n          <Error response={detailResponse} /> :\r\n          <div className={styles.container}>\r\n            <img src={image ? image : noPicture} alt={breed.name} />\r\n            <div className={styles.name}>{name}</div>\r\n\r\n            <div className={styles.dataContainer}>\r\n\r\n              <div className={styles.data}>\r\n                <span className={styles.iconWeight}></span>\r\n                <span className={styles.text}>Weight</span>\r\n                {min_weight && max_weight ? <span className={styles.info}>{min_weight}kg - {max_weight}kg</span> : <span className={styles.info}>Unknown</span>}\r\n              </div>\r\n              <hr />\r\n              <div className={styles.data}>\r\n                <span className={styles.iconHeight}></span>\r\n                <span className={styles.text}>Height</span>\r\n                {min_height && max_height ? <span className={styles.info}>{min_height}cm - {max_height}cm</span> : <span className={styles.info}>Unknown</span>}\r\n              </div>\r\n              <hr />\r\n              <div className={styles.data}>\r\n                <span className={styles.iconLife}></span>\r\n                <span className={styles.text}>Life Span</span>\r\n                {min_life_span && max_life_span ? <span className={styles.info}>{min_life_span} years - {max_life_span} years</span> : <span className={styles.info}>Unknown</span>}\r\n              </div>\r\n              <hr />\r\n              <div className={styles.data}>\r\n                <span className={styles.iconTemperaments}></span>\r\n                <span className={styles.text}>Temperaments</span>\r\n                <span className={styles.info}>\r\n                  {sortedTemps?.map((temp, index) => <li key={index}>{temp}</li>)}</span>\r\n              </div>\r\n              <hr />\r\n              {isFromDB &&\r\n                <button className={styles.deleteButton} onClick={handleDelete}>Delete</button>}\r\n              <NavLink to={'/breeds/'}><button className={styles.backButton}>Back</button></NavLink>\r\n            </div>\r\n          </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BreedDetail;","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Status\\NotFound.jsx",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\redux\\actions\\index.js",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\redux\\reducers\\index.js",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Create\\formValidators.js",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Status\\Loading.jsx",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Breeds\\Breeds.jsx",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Status\\Error.jsx",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Status\\Alert.jsx",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Pagination\\Pagination.jsx",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Filters\\Filters.jsx",["103"],"import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getBreedsByName, setByNameResponse, setDisplayBreeds } from '../../redux/actions'\r\nimport BreedName from './Categories/BreedName';\r\nimport Temperament from './Categories/Temperament';\r\nimport Sorts from './Sorts';\r\nimport styles from './Filters.module.css';\r\n\r\nconst Filters = ({ setPageNumber }) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [filterByName, setFilterByName] = useState([]);\r\n  const [filterByTemperament, setFilterByTemperament] = useState([]);\r\n  const breeds = useSelector(state => state.breeds);\r\n  const breedsByName = useSelector(state => state.breedsByName);\r\n\r\n  useEffect(() => {\r\n    setPageNumber(1);\r\n    const tempsBreeds = filterBreedsTemps();\r\n    const nameBreeds = filterBreedsByName();\r\n    dispatch(setByNameResponse(''));\r\n    if(tempsBreeds.length && nameBreeds.length) {\r\n      dispatch(setDisplayBreeds(nameBreeds.filter(dog => tempsBreeds.includes(dog))));\r\n    }\r\n    else if(tempsBreeds.length) {\r\n      dispatch(setDisplayBreeds(tempsBreeds));\r\n    }\r\n    else {\r\n      dispatch(setDisplayBreeds(nameBreeds));\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [filterByName, filterByTemperament]);\r\n\r\n  const filterBreedsByName = () => {\r\n    if(breedsByName.length) {\r\n      return breedsByName.filter(breed => {\r\n        return filterByName.includes(breed.id);\r\n      })\r\n    }\r\n    return breeds.filter(breed => {\r\n      return filterByName.includes(breed.id);\r\n    })\r\n  }\r\n\r\n  const filterBreedsTemps = () => {\r\n    if(breedsByName.length) {\r\n      return breedsByName.filter(breed => {\r\n        return filterByTemperament.every(temp => breed.temperaments?.indexOf(temp) >= 0);\r\n      })\r\n    }\r\n    return breeds.filter(breed => {\r\n      return filterByTemperament.every(temp => breed.temperaments?.indexOf(temp) >= 0);\r\n    })\r\n  }\r\n\r\n  const clearFilters = () => {\r\n    dispatch(setDisplayBreeds(breeds));\r\n    document.querySelectorAll('input[type=checkbox]').forEach(el => el.checked = false);\r\n    document.querySelector('input[type=text]').value = '';\r\n    document.querySelectorAll('select')[0].selectedIndex = 0;\r\n    dispatch(setByNameResponse(''));\r\n    dispatch(getBreedsByName(''));\r\n    setFilterByName([]);\r\n    setFilterByTemperament([]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.querySelector('input[type=text]').value = '';\r\n  }, [clearFilters])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <div className={styles.sorts}><Sorts setPageNumber={setPageNumber}></Sorts></div>\r\n        <div className={styles.clearButton}><button onClick={clearFilters}>Clear Filters</button></div>\r\n\r\n        <div className={styles.filtersContainer}>\r\n          <div className={styles.nameContainer}>\r\n            <div className={styles.title}>Filter By Name</div>\r\n            <BreedName filterByName={filterByName} setFilterByName={setFilterByName} />\r\n          </div>\r\n          <div className={styles.temperamentContainer}>\r\n            <div className={styles.title}>Filter By Temperaments</div>\r\n            <Temperament filterByTemperament={filterByTemperament} setFilterByTemperament={setFilterByTemperament} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Filters;","C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Filters\\SearchBar\\SearchByName.jsx",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Breeds\\BreedCard.jsx",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Filters\\Sorts.jsx",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Filters\\Categories\\BreedName.jsx",[],"C:\\Users\\carla\\OneDrive\\Desktop\\PI\\client\\src\\components\\Filters\\Categories\\Temperament.jsx",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":4,"column":42,"nodeType":"110","messageId":"111","endLine":4,"endColumn":51},{"ruleId":"108","severity":1,"message":"109","line":4,"column":39,"nodeType":"110","messageId":"111","endLine":4,"endColumn":48},{"ruleId":"112","severity":1,"message":"113","line":58,"column":6,"nodeType":"114","endLine":58,"endColumn":8,"suggestions":"115"},{"ruleId":"112","severity":1,"message":"116","line":58,"column":9,"nodeType":"117","endLine":67,"endColumn":4,"suggestions":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'getBreeds' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'params.id'. Either include them or remove the dependency array.","ArrayExpression",["121"],"The 'clearFilters' function makes the dependencies of useEffect Hook (at line 71) change on every render. To fix this, wrap the definition of 'clearFilters' in its own useCallback() Hook.","VariableDeclarator",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [dispatch, params.id]",{"range":"127","text":"128"},"Wrap the definition of 'clearFilters' in its own useCallback() Hook.",{"range":"129","text":"130"},[1942,1944],"[dispatch, params.id]",[1973,2372],"useCallback(() => {\r\n    dispatch(setDisplayBreeds(breeds));\r\n    document.querySelectorAll('input[type=checkbox]').forEach(el => el.checked = false);\r\n    document.querySelector('input[type=text]').value = '';\r\n    document.querySelectorAll('select')[0].selectedIndex = 0;\r\n    dispatch(setByNameResponse(''));\r\n    dispatch(getBreedsByName(''));\r\n    setFilterByName([]);\r\n    setFilterByTemperament([]);\r\n  })"]